//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ITSolution.Framework.Reports.ReportServer {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReportImage", Namespace="http://schemas.datacontract.org/2004/07/ITSolution.Reports.Entidades")]
    [System.SerializableAttribute()]
    public partial class ReportImage : ITSolution.Framework.Reports.ReportServer.AbstractReportImage {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ITSolution.Framework.Reports.ReportServer.ReportDataSource[] DatasourcesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdReportField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ITSolution.Framework.Reports.ReportServer.ReportDataSource[] Datasources {
            get {
                return this.DatasourcesField;
            }
            set {
                if ((object.ReferenceEquals(this.DatasourcesField, value) != true)) {
                    this.DatasourcesField = value;
                    this.RaisePropertyChanged("Datasources");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdReport {
            get {
                return this.IdReportField;
            }
            set {
                if ((this.IdReportField.Equals(value) != true)) {
                    this.IdReportField = value;
                    this.RaisePropertyChanged("IdReport");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AbstractReportImage", Namespace="http://schemas.datacontract.org/2004/07/ITSolution.Reports.Entidades")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ITSolution.Framework.Reports.ReportServer.ReportImage))]
    public partial class AbstractReportImage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ITSolution.Framework.Reports.ReportServer.ReportGroup GrupoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdGrpReportField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReportDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReportNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ITSolution.Framework.Reports.ReportServer.ReportGroup Grupo {
            get {
                return this.GrupoField;
            }
            set {
                if ((object.ReferenceEquals(this.GrupoField, value) != true)) {
                    this.GrupoField = value;
                    this.RaisePropertyChanged("Grupo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdGrpReport {
            get {
                return this.IdGrpReportField;
            }
            set {
                if ((this.IdGrpReportField.Equals(value) != true)) {
                    this.IdGrpReportField = value;
                    this.RaisePropertyChanged("IdGrpReport");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReportDescription {
            get {
                return this.ReportDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportDescriptionField, value) != true)) {
                    this.ReportDescriptionField = value;
                    this.RaisePropertyChanged("ReportDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReportName {
            get {
                return this.ReportNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportNameField, value) != true)) {
                    this.ReportNameField = value;
                    this.RaisePropertyChanged("ReportName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReportGroup", Namespace="http://schemas.datacontract.org/2004/07/ITSolution.Reports.Entidades")]
    [System.SerializableAttribute()]
    public partial class ReportGroup : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdGrpReportField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupDescription {
            get {
                return this.GroupDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupDescriptionField, value) != true)) {
                    this.GroupDescriptionField = value;
                    this.RaisePropertyChanged("GroupDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdGrpReport {
            get {
                return this.IdGrpReportField;
            }
            set {
                if ((this.IdGrpReportField.Equals(value) != true)) {
                    this.IdGrpReportField = value;
                    this.RaisePropertyChanged("IdGrpReport");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReportDataSource", Namespace="http://schemas.datacontract.org/2004/07/ITSolution.Reports.Entidades")]
    [System.SerializableAttribute()]
    public partial class ReportDataSource : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ITSolution.Framework.Reports.ReportServer.SqlQueryIts ConsultaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DatamemberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdDataSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdQueryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdReportField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ITSolution.Framework.Reports.ReportServer.ReportImage ReportImageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ITSolution.Framework.Reports.ReportServer.SqlQueryIts Consulta {
            get {
                return this.ConsultaField;
            }
            set {
                if ((object.ReferenceEquals(this.ConsultaField, value) != true)) {
                    this.ConsultaField = value;
                    this.RaisePropertyChanged("Consulta");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Datamember {
            get {
                return this.DatamemberField;
            }
            set {
                if ((this.DatamemberField.Equals(value) != true)) {
                    this.DatamemberField = value;
                    this.RaisePropertyChanged("Datamember");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdDataSource {
            get {
                return this.IdDataSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.IdDataSourceField, value) != true)) {
                    this.IdDataSourceField = value;
                    this.RaisePropertyChanged("IdDataSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdQuery {
            get {
                return this.IdQueryField;
            }
            set {
                if ((object.ReferenceEquals(this.IdQueryField, value) != true)) {
                    this.IdQueryField = value;
                    this.RaisePropertyChanged("IdQuery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdReport {
            get {
                return this.IdReportField;
            }
            set {
                if ((this.IdReportField.Equals(value) != true)) {
                    this.IdReportField = value;
                    this.RaisePropertyChanged("IdReport");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ITSolution.Framework.Reports.ReportServer.ReportImage ReportImage {
            get {
                return this.ReportImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportImageField, value) != true)) {
                    this.ReportImageField = value;
                    this.RaisePropertyChanged("ReportImage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SqlQueryIts", Namespace="http://schemas.datacontract.org/2004/07/ITSolution.Reports.Entidades")]
    [System.SerializableAttribute()]
    public partial class SqlQueryIts : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodigoQueryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorpoQueryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DataAlteracaoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DataCriacaoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdQueryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomeQueryField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodigoQuery {
            get {
                return this.CodigoQueryField;
            }
            set {
                if ((object.ReferenceEquals(this.CodigoQueryField, value) != true)) {
                    this.CodigoQueryField = value;
                    this.RaisePropertyChanged("CodigoQuery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorpoQuery {
            get {
                return this.CorpoQueryField;
            }
            set {
                if ((object.ReferenceEquals(this.CorpoQueryField, value) != true)) {
                    this.CorpoQueryField = value;
                    this.RaisePropertyChanged("CorpoQuery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DataAlteracao {
            get {
                return this.DataAlteracaoField;
            }
            set {
                if ((this.DataAlteracaoField.Equals(value) != true)) {
                    this.DataAlteracaoField = value;
                    this.RaisePropertyChanged("DataAlteracao");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DataCriacao {
            get {
                return this.DataCriacaoField;
            }
            set {
                if ((this.DataCriacaoField.Equals(value) != true)) {
                    this.DataCriacaoField = value;
                    this.RaisePropertyChanged("DataCriacao");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdQuery {
            get {
                return this.IdQueryField;
            }
            set {
                if ((object.ReferenceEquals(this.IdQueryField, value) != true)) {
                    this.IdQueryField = value;
                    this.RaisePropertyChanged("IdQuery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NomeQuery {
            get {
                return this.NomeQueryField;
            }
            set {
                if ((object.ReferenceEquals(this.NomeQueryField, value) != true)) {
                    this.NomeQueryField = value;
                    this.RaisePropertyChanged("NomeQuery");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ReportServer.IReportContract")]
    public interface IReportContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportContract/PrintReportCustomById", ReplyAction="http://tempuri.org/IReportContract/PrintReportCustomByIdResponse")]
        void PrintReportCustomById(int idReport);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportContract/PrintReportCustomById", ReplyAction="http://tempuri.org/IReportContract/PrintReportCustomByIdResponse")]
        System.Threading.Tasks.Task PrintReportCustomByIdAsync(int idReport);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportContract/PrintReport", ReplyAction="http://tempuri.org/IReportContract/PrintReportResponse")]
        void PrintReport(int idreport);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportContract/PrintReport", ReplyAction="http://tempuri.org/IReportContract/PrintReportResponse")]
        System.Threading.Tasks.Task PrintReportAsync(int idreport);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportContract/ShowReportList", ReplyAction="http://tempuri.org/IReportContract/ShowReportListResponse")]
        void ShowReportList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportContract/ShowReportList", ReplyAction="http://tempuri.org/IReportContract/ShowReportListResponse")]
        System.Threading.Tasks.Task ShowReportListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportContract/GetAllReports", ReplyAction="http://tempuri.org/IReportContract/GetAllReportsResponse")]
        ITSolution.Framework.Reports.ReportServer.ReportImage[] GetAllReports();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportContract/GetAllReports", ReplyAction="http://tempuri.org/IReportContract/GetAllReportsResponse")]
        System.Threading.Tasks.Task<ITSolution.Framework.Reports.ReportServer.ReportImage[]> GetAllReportsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportContract/GetReport", ReplyAction="http://tempuri.org/IReportContract/GetReportResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ITSolution.Framework.Reports.ReportServer.ReportImage[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ITSolution.Framework.Reports.ReportServer.ReportImage))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ITSolution.Framework.Reports.ReportServer.AbstractReportImage))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ITSolution.Framework.Reports.ReportServer.ReportGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ITSolution.Framework.Reports.ReportServer.ReportDataSource[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ITSolution.Framework.Reports.ReportServer.ReportDataSource))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ITSolution.Framework.Reports.ReportServer.SqlQueryIts))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        object[] GetReport(int idReport);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportContract/GetReport", ReplyAction="http://tempuri.org/IReportContract/GetReportResponse")]
        System.Threading.Tasks.Task<object[]> GetReportAsync(int idReport);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IReportContractChannel : ITSolution.Framework.Reports.ReportServer.IReportContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReportContractClient : System.ServiceModel.ClientBase<ITSolution.Framework.Reports.ReportServer.IReportContract>, ITSolution.Framework.Reports.ReportServer.IReportContract {
        
        public ReportContractClient() {
        }
        
        public ReportContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ReportContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReportContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReportContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void PrintReportCustomById(int idReport) {
            base.Channel.PrintReportCustomById(idReport);
        }
        
        public System.Threading.Tasks.Task PrintReportCustomByIdAsync(int idReport) {
            return base.Channel.PrintReportCustomByIdAsync(idReport);
        }
        
        public void PrintReport(int idreport) {
            base.Channel.PrintReport(idreport);
        }
        
        public System.Threading.Tasks.Task PrintReportAsync(int idreport) {
            return base.Channel.PrintReportAsync(idreport);
        }
        
        public void ShowReportList() {
            base.Channel.ShowReportList();
        }
        
        public System.Threading.Tasks.Task ShowReportListAsync() {
            return base.Channel.ShowReportListAsync();
        }
        
        public ITSolution.Framework.Reports.ReportServer.ReportImage[] GetAllReports() {
            return base.Channel.GetAllReports();
        }
        
        public System.Threading.Tasks.Task<ITSolution.Framework.Reports.ReportServer.ReportImage[]> GetAllReportsAsync() {
            return base.Channel.GetAllReportsAsync();
        }
        
        public object[] GetReport(int idReport) {
            return base.Channel.GetReport(idReport);
        }
        
        public System.Threading.Tasks.Task<object[]> GetReportAsync(int idReport) {
            return base.Channel.GetReportAsync(idReport);
        }
    }
}
